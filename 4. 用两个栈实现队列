#include <iostream>
#include <vector>
#include <stack>
using namespace std;
/*
题目描述
用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。
*/

class Solution
{
public:
	void push(int node) {
		stack1.push(node);
	}

	int pop() {
		if(stack2.empty())
		{
			while(!stack1.empty())
			{
				int x = stack1.top();
				stack2.push(x);
				stack1.pop();
			}
		}
		if(!stack2.empty())
		{
			int t = stack2.top();
			stack2.pop();
			return t;
		}
		return -1;
	}

private:
	stack<int> stack1;
	stack<int> stack2;
};
int main()
{
	//队列先进先出，栈先进后出
	Solution su;
	int temp;
	su.push(1);
	su.push(2);
	su.push(3);
	temp = su.pop();
	cout << temp << ",";
	cout << su.pop()<< ",";
	su.push(4);
	cout << su.pop()<< ",";
	su.push(5);
	cout << su.pop()<< ",";
	cout << su.pop()<< endl;
	system("pause");
	return 0;
}
